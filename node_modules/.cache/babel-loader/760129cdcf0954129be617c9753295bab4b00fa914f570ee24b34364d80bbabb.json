{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: [],\n  itemsAmount: [],\n  expences: 0\n};\nconst basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    IncExpences(state, action) {\n      state.expences += action.payload;\n    },\n    DecExpences(state, action) {\n      state.expences -= action.payload;\n    },\n    SetAmountItems(state, action) {\n      state.itemsAmount = action.payload;\n    },\n    AddItem(state, action) {\n      state.items.push(action.payload);\n    },\n    RemoveItem(state, action) {\n      state.items = state.items.filter(el => el.props.id !== action.payload.props.id);\n    },\n    AddItemAmount(state, action) {\n      state.itemsAmount.push(action.payload);\n    },\n    RemoveItemAmount(state, action) {\n      state.itemsAmount = state.itemsAmount.filter(el => el.id !== action.payload.id);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(FetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    });\n    builder.addCase(FetchPizzas.pending, state => {\n      state.items = [];\n      state.status = Status.LOADING;\n    });\n    builder.addCase(FetchPizzas.rejected, state => {\n      state.items = [];\n      state.status = Status.ERROR;\n    });\n  }\n});\nexport const {\n  IncExpences,\n  DecExpences,\n  AddItem,\n  RemoveItem,\n  AddItemAmount,\n  RemoveItemAmount,\n  SetAmountItems\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","itemsAmount","expences","basketSlice","name","reducers","IncExpences","state","action","payload","DecExpences","SetAmountItems","AddItem","push","RemoveItem","filter","el","props","id","AddItemAmount","RemoveItemAmount","extraReducers","builder","addCase","FetchPizzas","fulfilled","status","Status","SUCCESS","pending","LOADING","rejected","ERROR","actions","reducer"],"sources":["C:/Users/cubar/source/react/soket_ts/src/redux/basket/basketSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { BasketState, IItemsAmount, IItems } from \"../types\";\r\n\r\n\r\n\r\nconst initialState: BasketState = {\r\n  items: [],\r\n  itemsAmount: [],\r\n  expences: 0,\r\n};\r\n\r\nconst basketSlice = createSlice({\r\n  name: \"basket\",\r\n  initialState,\r\n  reducers: {\r\n    IncExpences(state, action: PayloadAction<number>) {\r\n      state.expences += action.payload;\r\n    },\r\n    DecExpences(state, action: PayloadAction<number>) {\r\n      state.expences -= action.payload;\r\n    },\r\n\r\n    SetAmountItems(state, action: PayloadAction<IItemsAmount[]>) {\r\n      state.itemsAmount = action.payload;\r\n    },\r\n\r\n    AddItem(state, action: PayloadAction<IItems>) {\r\n      state.items.push(action.payload);\r\n    },\r\n\r\n    RemoveItem(state, action: PayloadAction<IItems>) {\r\n      state.items = state.items.filter(\r\n        (el) => el.props.id !== action.payload.props.id\r\n      );\r\n    },\r\n\r\n    AddItemAmount(state, action: PayloadAction<IItemsAmount>) {\r\n      state.itemsAmount.push(action.payload);\r\n    },\r\n\r\n    RemoveItemAmount(state, action: PayloadAction<IItemsAmount>) {\r\n      state.itemsAmount = state.itemsAmount.filter(\r\n        (el) => el.id !== action.payload.id\r\n      );\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(FetchPizzas.fulfilled, (state, action) => {\r\n      state.items = action.payload;\r\n      state.status = Status.SUCCESS;\r\n    });\r\n\r\n    builder.addCase(FetchPizzas.pending, (state) => {\r\n      state.items = [];\r\n      state.status = Status.LOADING;\r\n    });\r\n\r\n    builder.addCase(FetchPizzas.rejected, (state) => {\r\n      state.items = [];\r\n      state.status = Status.ERROR;\r\n    });\r\n  },\r\n});\r\n\r\nexport const {\r\n  IncExpences,\r\n  DecExpences,\r\n  AddItem,\r\n  RemoveItem,\r\n  AddItemAmount,\r\n  RemoveItemAmount,\r\n  SetAmountItems,\r\n} = basketSlice.actions;\r\nexport default basketSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAK7D,MAAMC,YAAyB,GAAG;EAChCC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,WAAW,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,QAAQ;EACdL,YAAY;EACZM,QAAQ,EAAE;IACRC,WAAW,CAACC,KAAK,EAAEC,MAA6B,EAAE;MAChDD,KAAK,CAACL,QAAQ,IAAIM,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,WAAW,CAACH,KAAK,EAAEC,MAA6B,EAAE;MAChDD,KAAK,CAACL,QAAQ,IAAIM,MAAM,CAACC,OAAO;IAClC,CAAC;IAEDE,cAAc,CAACJ,KAAK,EAAEC,MAAqC,EAAE;MAC3DD,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACC,OAAO;IACpC,CAAC;IAEDG,OAAO,CAACL,KAAK,EAAEC,MAA6B,EAAE;MAC5CD,KAAK,CAACP,KAAK,CAACa,IAAI,CAACL,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC;IAEDK,UAAU,CAACP,KAAK,EAAEC,MAA6B,EAAE;MAC/CD,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAACe,MAAM,CAC7BC,EAAE,IAAKA,EAAE,CAACC,KAAK,CAACC,EAAE,KAAKV,MAAM,CAACC,OAAO,CAACQ,KAAK,CAACC,EAAE,CAChD;IACH,CAAC;IAEDC,aAAa,CAACZ,KAAK,EAAEC,MAAmC,EAAE;MACxDD,KAAK,CAACN,WAAW,CAACY,IAAI,CAACL,MAAM,CAACC,OAAO,CAAC;IACxC,CAAC;IAEDW,gBAAgB,CAACb,KAAK,EAAEC,MAAmC,EAAE;MAC3DD,KAAK,CAACN,WAAW,GAAGM,KAAK,CAACN,WAAW,CAACc,MAAM,CACzCC,EAAE,IAAKA,EAAE,CAACE,EAAE,KAAKV,MAAM,CAACC,OAAO,CAACS,EAAE,CACpC;IACH;EACF,CAAC;EACDG,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACC,WAAW,CAACC,SAAS,EAAE,CAAClB,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACmB,MAAM,GAAGC,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC;IAEFN,OAAO,CAACC,OAAO,CAACC,WAAW,CAACK,OAAO,EAAGtB,KAAK,IAAK;MAC9CA,KAAK,CAACP,KAAK,GAAG,EAAE;MAChBO,KAAK,CAACmB,MAAM,GAAGC,MAAM,CAACG,OAAO;IAC/B,CAAC,CAAC;IAEFR,OAAO,CAACC,OAAO,CAACC,WAAW,CAACO,QAAQ,EAAGxB,KAAK,IAAK;MAC/CA,KAAK,CAACP,KAAK,GAAG,EAAE;MAChBO,KAAK,CAACmB,MAAM,GAAGC,MAAM,CAACK,KAAK;IAC7B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACX1B,WAAW;EACXI,WAAW;EACXE,OAAO;EACPE,UAAU;EACVK,aAAa;EACbC,gBAAgB;EAChBT;AACF,CAAC,GAAGR,WAAW,CAAC8B,OAAO;AACvB,eAAe9B,WAAW,CAAC+B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}