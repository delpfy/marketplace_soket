{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { InitialiseHome } from \"../../utils/InitialiseHome\";\nimport { fetchGoods } from \"./asyncActions\";\nconst initialState = InitialiseHome();\nconst homeSlice = createSlice({\n  name: \"home\",\n  initialState,\n  reducers: {\n    SetID(state, action) {\n      state.id = action.payload;\n    },\n    SetCategory(state, action) {\n      state.category = action.payload;\n    },\n    SetDisplayItems(state, action) {\n      state.itemsDisplay = action.payload;\n    },\n    SetCatalogSize(state, action) {\n      state.catalogSize = action.payload;\n    },\n    SetNavState(state) {\n      if (state.isOpened) {\n        state.isOpened = !state.isOpened;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchGoods.fulfilled, (state, action) => {\n      state.itemsDisplay = action.payload;\n    });\n  }\n});\nexport const {\n  SetID,\n  SetCategory,\n  SetDisplayItems,\n  SetCatalogSize,\n  SetNavState\n} = homeSlice.actions;\nexport default homeSlice.reducer;","map":{"version":3,"names":["createSlice","InitialiseHome","fetchGoods","initialState","homeSlice","name","reducers","SetID","state","action","id","payload","SetCategory","category","SetDisplayItems","itemsDisplay","SetCatalogSize","catalogSize","SetNavState","isOpened","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["C:/Users/cubar/source/react/soket_ts/src/redux/home/homeSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { InitialiseHome } from \"../../utils/InitialiseHome\";\r\nimport {IItemsDisplay, HomeState} from '../types'\r\nimport { fetchGoods } from \"./asyncActions\";\r\n\r\nconst initialState: HomeState = InitialiseHome();\r\n\r\nconst homeSlice = createSlice({\r\n  name: \"home\",\r\n  initialState,\r\n  reducers: {\r\n    SetID(state, action: PayloadAction<number>) {\r\n      state.id = action.payload;\r\n    },\r\n    SetCategory(state, action: PayloadAction<string>) {\r\n      state.category = action.payload;\r\n    },\r\n    SetDisplayItems(state, action: PayloadAction<IItemsDisplay[]>) {\r\n      state.itemsDisplay = action.payload;\r\n    },\r\n    SetCatalogSize(state, action: PayloadAction<number>){\r\n      state.catalogSize = action.payload;\r\n    },\r\n    SetNavState(state){\r\n      if(state.isOpened){\r\n        state.isOpened = !state.isOpened;\r\n\r\n      }\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchGoods.fulfilled, (state, action) => {\r\n      state.itemsDisplay = action.payload;\r\n    });\r\n\r\n  }});\r\n\r\nexport const { SetID, SetCategory, SetDisplayItems,SetCatalogSize,SetNavState} = homeSlice.actions;\r\nexport default homeSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAC7D,SAASC,cAAc,QAAQ,4BAA4B;AAE3D,SAASC,UAAU,QAAQ,gBAAgB;AAE3C,MAAMC,YAAuB,GAAGF,cAAc,EAAE;AAEhD,MAAMG,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZF,YAAY;EACZG,QAAQ,EAAE;IACRC,KAAK,CAACC,KAAK,EAAEC,MAA6B,EAAE;MAC1CD,KAAK,CAACE,EAAE,GAAGD,MAAM,CAACE,OAAO;IAC3B,CAAC;IACDC,WAAW,CAACJ,KAAK,EAAEC,MAA6B,EAAE;MAChDD,KAAK,CAACK,QAAQ,GAAGJ,MAAM,CAACE,OAAO;IACjC,CAAC;IACDG,eAAe,CAACN,KAAK,EAAEC,MAAsC,EAAE;MAC7DD,KAAK,CAACO,YAAY,GAAGN,MAAM,CAACE,OAAO;IACrC,CAAC;IACDK,cAAc,CAACR,KAAK,EAAEC,MAA6B,EAAC;MAClDD,KAAK,CAACS,WAAW,GAAGR,MAAM,CAACE,OAAO;IACpC,CAAC;IACDO,WAAW,CAACV,KAAK,EAAC;MAChB,IAAGA,KAAK,CAACW,QAAQ,EAAC;QAChBX,KAAK,CAACW,QAAQ,GAAG,CAACX,KAAK,CAACW,QAAQ;MAElC;IACF;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACpB,UAAU,CAACqB,SAAS,EAAE,CAACf,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACO,YAAY,GAAGN,MAAM,CAACE,OAAO;IACrC,CAAC,CAAC;EAEJ;AAAC,CAAC,CAAC;AAEL,OAAO,MAAM;EAAEJ,KAAK;EAAEK,WAAW;EAAEE,eAAe;EAACE,cAAc;EAACE;AAAW,CAAC,GAAGd,SAAS,CAACoB,OAAO;AAClG,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}